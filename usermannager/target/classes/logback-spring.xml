<?xml version="1.0" encoding="UTF-8" ?>
<configuration>

    <property name="filepath" value="E:\\log\\tomcat" />

    <!--配置项需要ConsoleAppender这个类来处理-->
    <appender  name="consoleLog"  class="ch.qos.logback.core.ConsoleAppender">

        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>

        </layout >

    </appender>


    <!--配置文件-【针对info和error,输出到不同的文件】-->
    <!--我们要对日志每天输出一个文件，它其实是一个滚动的文件输出-->
    <appender name="fileInfoLog"  class="ch.qos.logback.core.rolling.RollingFileAppender">

        <filter class="ch.qos.logback.classic.filter.LevelFilter">

            <level>ERROR</level>    <!--过滤掉error的级别-->
            <onMatch>DENY</onMatch> <!--如果匹配，就禁止掉-->
            <onMismatch>ACCEPT</onMismatch><!--如果没有命中，我们就是用这条规则-->
        </filter>
        <!--日志格式-->
        <encoder>

            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>

        </encoder>
        <!-- 配置滚动策略 -->
        <rollingPolicy  class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  <!--按照时间来滚动，每天一个日志文件-->
            <!-- 路径 -->
            <fileNamePattern>${filepath}\info.%d.log</fileNamePattern>    <!--日志文件名带上时间-->
        </rollingPolicy>

    </appender>

    <appender name="fileErrorLog"  class="ch.qos.logback.core.rolling.RollingFileAppender">

       <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>ERROR</level>

       </filter>
        <encoder>
            <pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n</pattern>

        </encoder>

        <rollingPolicy  class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <fileNamePattern>${filepath}\error.%d.log</fileNamePattern>

        </rollingPolicy>

    </appender>


    <root  level ="info">
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>

    </root>

</configuration>

